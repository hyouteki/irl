print:                            ;; Convert integer to string (in reverse order)
  mov rax, rdi                    ;; Move the input integer to rax
  lea rsi, [print_buffer+19]      ;; Point to the end of the buffer
  mov byte [rsi], 0               ;; Null-terminate the string
  dec rsi
  mov byte [rsi], 10              ;; Append newline character
  print_label_convert_loop:
    xor rdx, rdx                  ;; Clear rdx
    mov rbx, 10                   ;; Divisor (10 for base 10)
    div rbx                       ;; Divide rax by 10 (rdx = remainder, rax = quotient)
    add dl, '0'
    dec rsi                       ;; Move the pointer back
    mov [rsi], dl                 ;; Store the ASCII character in the buffer
    test rax, rax                 ;; Check if quotient is zero
    jnz print_label_convert_loop
  ;; Print the string
  mov rdx, print_buffer+20        ;; Calculate string length
  sub rdx, rsi                    ;; Length = buffer end - current position
  mov rax, 1
  mov rdi, 1
  syscall
  ret

segment readable writeable
print_buffer rb 20
